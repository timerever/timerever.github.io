<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>A Blog • Posts by &#34;trino&#34; category</title>
        <link>https://blog.timerever.tk</link>
        <description>Just another blog.</description>
        <language>zh-CN</language>
        <pubDate>Tue, 15 Mar 2022 08:15:36 +0000</pubDate>
        <lastBuildDate>Tue, 15 Mar 2022 08:15:36 +0000</lastBuildDate>
        <category>Java</category>
        <category>HttpClient</category>
        <category>Jackson</category>
        <category>Design Pattern</category>
        <category>Docker</category>
        <category>Dockerfile</category>
        <category>Java Web</category>
        <category>Linux</category>
        <category>C</category>
        <category>Android</category>
        <category>Huawei</category>
        <category>CyanogenMod</category>
        <category>Factory Patterns</category>
        <category>Hibernate</category>
        <category>Git</category>
        <category>GitHub</category>
        <category>Kubernetes</category>
        <category>K8s</category>
        <category>K3s</category>
        <category>Keycloak</category>
        <category>OAuth2</category>
        <category>SSO</category>
        <category>VMware</category>
        <category>vmdk</category>
        <category>MySQL</category>
        <category>Tutorial</category>
        <category>wget</category>
        <category>Regular Expression</category>
        <category>Sharding</category>
        <category>Sharding-JDBC</category>
        <category>Translate</category>
        <category>Algorithm</category>
        <category>Sort</category>
        <category>Ubuntu</category>
        <category>Ruby</category>
        <category>Jekyll</category>
        <category>Windows</category>
        <category>Regedit</category>
        <category>PowerShell</category>
        <item>
            <guid isPermalink="true">https://blog.timerever.tk/2022/03/15/trino-deploy-tutorials/</guid>
            <title>Trino 介绍及部署使用</title>
            <link>https://blog.timerever.tk/2022/03/15/trino-deploy-tutorials/</link>
            <category>MySQL</category>
            <category>Tutorial</category>
            <pubDate>Tue, 15 Mar 2022 08:15:36 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;之前我们提到项目上有一个跨库进行 MySQL join 操作的需求，当时选择使用了 MySQL 的 FEDERATED 存储引擎来解决这个问题，具体可以看 &lt;a href=&#34;/2022/02/28/mysql-federated-storage-engine-tutorials/&#34;&gt;MySQL FEDERATED 存储引擎介绍及使用&lt;/a&gt;。但是 FEDERATED 本身只支持 MySQL 数据库，如果我们需要对多个不同种类的数据库进行关联操作，那么还是要依赖第三方组件来进行，比如这次要介绍的 Trino。&lt;/p&gt;
&lt;p&gt;Trino 是基于 Java 开发的高性能的、分布式的大数据 SQL 查询引擎，支持基本上所有的常见数据源以及你所想象不到的中间件存储比如 Kafka，同时也支持在单个查询中使用多个数据源来进行关联查询。&lt;/p&gt;
&lt;p&gt;官网：&lt;a href=&#34;https://trino.io/&#34;&gt;Trino&lt;/a&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;前世今生&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前世今生&#34;&gt;&lt;/a&gt; 前世今生&lt;/h3&gt;
&lt;p&gt;Trino 的前身是 Facebook 的 Presto。2012 年， Martin Traverso、Dain Sundstrom 和 David Phillips 入职了 Facebook 的大数据基建部门，并和 Eric Hwang 一同开发了 Presto 来解决 Facebook 的海量 Hadoop 数据仓库的低延迟交互分析的问题，随后在 2013 年 11 月将 Presto 开源。但好景不长，在 2018 年 Facebook 的管理层想要对 Presto 项目及其未来拥有更多的控制，并让毫无 Presto 经验的开发者可以直接提交代码，而且这个决定是在没有 Presto 社区参与的情况下做出的。创始人们觉得这和拥有一个健康开放的社区相矛盾，所以为了使 Presto 的成长更加健康，他们决定离开了 Facebook。&lt;/p&gt;
&lt;p&gt;2019 年 1 月，Presto 软件基金会成立了，创始人们决定在未来的 10 个月中不再受雇于任何企业来专门与全球的用户和开发者们接触以及和贡献者合作来扩大和加强社区。随着参与的人员越来越多，Presto 项目也比以前更拥有活力，这个分支叫做 PrestoSQL。&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-0.png&#34; class=&#34;&#34; title=&#34;commit 比较&#34;&gt;
&lt;p&gt;在 PrestoSQL 稳固几个月之后，Facebook 决定通过 Linux 基金会来创建一个具有竞争关系的社区，第一部就是为 Presto 申请了商标。2019 年 9 月，Facebook 在 Linux 基金会成立了 Presto 基金会，这边的分支叫做 PrestoDB。所以 PrestoSQL 不得不改名，最后将名称改为了 Trino。&lt;/p&gt;
&lt;p&gt;最后引用官宣改名文章的最后一句话：&lt;strong&gt;If you love this project, you already love Trino.&lt;/strong&gt; ❤️&lt;/p&gt;
&lt;h3 id=&#34;server-节点安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#server-节点安装&#34;&gt;&lt;/a&gt; server 节点安装&lt;/h3&gt;
&lt;p&gt;因为现阶段只是简单地进行试用，所以我们只安装 server 节点，而且 server 节点同时也可以作为 worker 节点使用。&lt;/p&gt;
&lt;h4 id=&#34;java-环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java-环境&#34;&gt;&lt;/a&gt; Java 环境&lt;/h4&gt;
&lt;p&gt;为什么要单独强调 Java 环境，是因为 Trino 对 Java 环境很挑剔，官网文档要求 64 位的 Java 11 运行环境，且最低版本号为 11.0.11。如果是 Java 12 或者 13、17 等后续版本，官方说可能正常工作，并没有做过测试。同时推荐 &lt;a href=&#34;https://www.azul.com/downloads/?package=jdk#download-openjdk&#34;&gt;Azul Zulu&lt;/a&gt; 的 JDK，官方说只针对 Azul Zulu 的发行版做了测试，可以说是很娇贵了。&lt;/p&gt;
&lt;p&gt;所以为了避免因为 JDK 的问题使程序出现问题，我们还是老老实实按照要求使用 Azul Zulu 的 Open JDK，具体安装过程不再赘述，是用的版本为当前 Java 11 的最新版 11.0.14.1+1。&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-1.png&#34; class=&#34;&#34; title=&#34;JDK 版本&#34;&gt;
&lt;h4 id=&#34;python-环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python-环境&#34;&gt;&lt;/a&gt; Python 环境&lt;/h4&gt;
&lt;p&gt;Python 环境的要求相对来说就很宽泛了，官方说 2.6.x、2.7.x、或者 3.x 的版本均可，因为 Python 环境只是给启动脚本使用的，并不会影响程序的正常运行。都 2022 年了，所以我们这里使用 Python 3 的最新版即可。&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-2.png&#34; class=&#34;&#34; title=&#34;Python 版本&#34;&gt;
&lt;h4 id=&#34;安装-trino&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-trino&#34;&gt;&lt;/a&gt; 安装 Trino&lt;/h4&gt;
&lt;p&gt;从官网下载 server 节点压缩包并解压即可。Trino 需要一个目录来存储日志等数据，官方建议放在 Trino 安装目录外，因为这样可以很方便地在后续升级 Trino 版本，具体配置放下面再说。&lt;/p&gt;
&lt;h3 id=&#34;trino-配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#trino-配置&#34;&gt;&lt;/a&gt; Trino 配置&lt;/h3&gt;
&lt;p&gt;安装完 Trino 之后还需要对 Trino 进行一连串的配置才可以运行。首先在安装目录创建 &lt;code&gt;etc&lt;/code&gt; 文件夹，用来放置配置信息，然后通过创建对应文件的方式对 Trino 进行配置。&lt;/p&gt;
&lt;h4 id=&#34;node-节点配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#node-节点配置文件&#34;&gt;&lt;/a&gt; Node 节点配置文件&lt;/h4&gt;
&lt;p&gt;创建 &lt;code&gt;node.properties&lt;/code&gt; 文件配置节点信息：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 集群的环境名称，同一集群下的节点必须具有相同的环境名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node.environment=test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 节点的唯一 ID，集群内不能重复&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node.id=b0e4c61a-a304-47d3-bfc7-88be4c6a22c1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 数据存储路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node.data-dir=/opt/trino-server-374/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;jvm-配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jvm-配置&#34;&gt;&lt;/a&gt; JVM 配置&lt;/h4&gt;
&lt;p&gt;创建 &lt;code&gt;jvm.config&lt;/code&gt; 文件存储 JVM 启动参数，在官方样例中删掉了 OOM 相关的参数并调整了下内存需求：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;-server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-Xmx4G&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:-UseBiasedLocking&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:+UseG1GC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:G1HeapRegionSize=32M&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:-OmitStackTraceInFastThrow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:ReservedCodeCacheSize=512M&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:PerMethodRecompilationCutoff=10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-XX:PerBytecodeRecompilationCutoff=10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-Djdk.attach.allowAttachSelf=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-Djdk.nio.maxCachedBufferSize=2000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;config-配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#config-配置文件&#34;&gt;&lt;/a&gt; Config 配置文件&lt;/h4&gt;
&lt;p&gt;创建 &lt;code&gt;config.properties&lt;/code&gt; 文件，储存的是一些杂七杂八的配置。因为我们只有一个节点做测试，即当 server 又当 worker，所以使用下列配置，端口按需调整：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 标识为协调员，可以接受客户端请求并管理查询&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;coordinator=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 作为协调员的同时可作为 worker 节点使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node-scheduler.include-coordinator=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-server.http.port=8080&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;query.max-memory=2GB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;query.max-memory-per-node=2GB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 协调员的地址，注册发现使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;discovery.uri=http://127.0.0.1:8080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;日志等级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日志等级&#34;&gt;&lt;/a&gt; 日志等级&lt;/h4&gt;
&lt;p&gt;创建 &lt;code&gt;log.properties&lt;/code&gt; 文件调整日志等级，可选，默认为 &lt;code&gt;INFO&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;io.trino=INFO&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;数据源配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据源配置&#34;&gt;&lt;/a&gt; 数据源配置&lt;/h4&gt;
&lt;p&gt;Trino 支持的数据源非常的多，具体可以看官方文档 &lt;a href=&#34;https://trino.io/docs/current/connector.html&#34;&gt;Connectors&lt;/a&gt;，这里我们只配置一个 MySQL 和一个 PostgreSQL 作为测试。&lt;/p&gt;
&lt;p&gt;首先创建 &lt;code&gt;catalog&lt;/code&gt; 文件夹，然后创建 &lt;code&gt;mysql.properties&lt;/code&gt; 文件，文件名的 &lt;code&gt;mysql&lt;/code&gt; 前缀为 catalog 名称，可以自由指定。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 指定为 MySQL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connector.name=mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# JDBC 连接地址，注意，MySQL 作为数据源时不能指定具体 database&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection-url=jdbc:mysql://192.168.1.202:3306?useSSL=false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection-user=root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection-password=root&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后再创建 &lt;code&gt;postgresql.properties&lt;/code&gt; 文件：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;connector.name=postgresql&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection-url=jdbc:postgresql://192.168.1.202:5432/test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection-user=postgres&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection-password=postgres&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;启动-trino&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动-trino&#34;&gt;&lt;/a&gt; 启动 Trino&lt;/h4&gt;
&lt;p&gt;可以通过运行 &lt;code&gt;bin&lt;/code&gt; 目录下的 &lt;code&gt;launcher&lt;/code&gt; 文件启动：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;后台运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/bin$ ./launcher start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;前台运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/bin$ ./launcher run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看到显示 &lt;code&gt;SERVER STARTED&lt;/code&gt; 后就说明 Trino 正常启动了，可以通过浏览器直接访问 HTTP 端口来查看集群状态，用户名随意输入：&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-3.png&#34; class=&#34;&#34; title=&#34;web ui&#34;&gt;
&lt;h3 id=&#34;trino-使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#trino-使用&#34;&gt;&lt;/a&gt; Trino 使用&lt;/h3&gt;
&lt;p&gt;我们可以通过两种方式来使用 Trino，使用官方的 CLI 命令工具，或者通过 JDBC 驱动在 Java 程序中使用。&lt;/p&gt;
&lt;h4 id=&#34;cli-工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cli-工具&#34;&gt;&lt;/a&gt; CLI 工具&lt;/h4&gt;
&lt;p&gt;CLI 工具需要 Java 8 或更高版本作为运行环境，我们只需要下载官方提供的 jar 包即可直接使用。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374$ wget https://repo1.maven.org/maven2/io/trino/trino-cli/374/trino-cli-374-executable.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374$ chmod +x trino-cli-374-executable.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374$ ./trino-cli-374-executable.jar --server localhost:8080 --execute &amp;#x27;SHOW TABLES FROM mysql.test&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374$ ./trino-cli-374-executable.jar --server localhost:8080 --execute &amp;#x27;SELECT * FROM mysql.test.user&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，&lt;code&gt;mysql&lt;/code&gt; 指的是我们在 catlog 文件夹创建的文件名，&lt;code&gt;test&lt;/code&gt; 为我们 MySQL 的数据库名称，&lt;code&gt;user&lt;/code&gt; 为表名。&lt;/p&gt;
&lt;h4 id=&#34;jdbc-驱动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdbc-驱动&#34;&gt;&lt;/a&gt; JDBC 驱动&lt;/h4&gt;
&lt;p&gt;CLI 工具的泛用性不强，真要产品化使用还是得采用 JDBC 方式。首先按照官方，添加 JDBC 驱动：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.trino&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;trino-jdbc&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;374&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后配置 JDBC 连接地址。这里可以有多种方案来配置，其中 &lt;code&gt;catalog&lt;/code&gt; 为文件名，&lt;code&gt;schema&lt;/code&gt; 相当于 MySQL 的 database：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;jdbc:trino://host:port&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jdbc:trino://host:port/catalog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jdbc:trino://host:port/catalog/schema&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户名可以任意输入，然后就可以正常使用了。&lt;/p&gt;
&lt;h3 id=&#34;高级配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#高级配置&#34;&gt;&lt;/a&gt; 高级配置&lt;/h3&gt;
&lt;p&gt;上面的流程是可以正常使用的，但是细节上处理的都不到位，比如默认是匿名访问的，用户名可以任意输入；默认没有权限控制，可以访问所有的 catalog 等等，所以我们需要进行一下高级配置。&lt;/p&gt;
&lt;h4 id=&#34;配置认证方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置认证方式&#34;&gt;&lt;/a&gt; 配置认证方式&lt;/h4&gt;
&lt;p&gt;Trino 支持很多种的认证方式，基本上常见的都支持。为了减少应用配置复杂度，我们仍然选择通用的用户名/密码方式进行认证。&lt;/p&gt;
&lt;p&gt;首先打开我们的 &lt;code&gt;config.properties&lt;/code&gt; 文件，添加认证配置：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http-server.authentication.type=PASSWORD&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后仍然是在 &lt;code&gt;etc&lt;/code&gt; 目录下创建 &lt;code&gt;password-authenticator.properties&lt;/code&gt; 文件，指定密码来源：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 采用文件的方式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;password-authenticator.name=file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;指定密码文件位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file.password-file=/opt/trino-server-374/etc/password.db&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后创建密码文件，我们可以使用 &lt;a href=&#34;https://httpd.apache.org/&#34;&gt;Apache HTTP Server&lt;/a&gt; 的 &lt;a href=&#34;https://httpd.apache.org/docs/current/programs/htpasswd.html&#34;&gt;htpasswd&lt;/a&gt; 工具来生成密码文件：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;touch password.db&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;htpasswd -B -C 10 password.db user&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt; 为我们想要创建的用户名，然后输入密码即可。&lt;/p&gt;
&lt;h4 id=&#34;开启-tls-支持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开启-tls-支持&#34;&gt;&lt;/a&gt; 开启 TLS 支持&lt;/h4&gt;
&lt;p&gt;当采用用户名/密码的方式进行认证时，Trino 强制要求我们使用 TLS，所以我们需要对其进行配置。&lt;/p&gt;
&lt;p&gt;首先我们需要创建 HTTPS 证书，由于是本地测试，所以我们直接自己签发一个。Trino 支持 PEM 文件和 JKS 文件，我们使用标准的 PEM 文件进行配置。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成私钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/etc/ssl$ openssl genrsa -out server.key 2048&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成 CSR&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/etc/ssl$ openssl req -new -key server.key -out server.csr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;自己派发证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/etc/ssl$ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成 PEM 格式文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/etc/ssl$ cat server.key server.crt &amp;gt; server.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;校验 PEM 文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/etc/ssl$ openssl rsa -in server.pem -check -noout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ubuntu@CRUCIAL:/opt/trino-server-374/etc/ssl$ openssl x509 -in server.pem -text -noout&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成完证书后，在 &lt;code&gt;config.properties&lt;/code&gt; 文件中添加如下配置即可开启 TLS 支持：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 开启 https&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-server.https.enabled=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 指定 https 端口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-server.https.port=8443&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 指定证书文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-server.https.keystore.path=/opt/trino-server-374/etc/ssl/server.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后修改 JDBC 连接地址，由于是自签证书，所以我们需要关闭证书校验：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;jdbc:trino://127.0.0.1:8443?SSL=true&amp;amp;SSLVerification=NONE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同理，CLI 命令修改为：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./trino-cli-374-executable.jar --server https://localhost:8443 --user user --password --execute &amp;#x27;SELECT * FROM mysql.test.user&amp;#x27; --insecure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;权限控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限控制&#34;&gt;&lt;/a&gt; 权限控制&lt;/h4&gt;
&lt;p&gt;默认在不开启权限控制的情况下，用户都拥有最大权限，这显示是很不安全的，所以需要配置权限控制。&lt;/p&gt;
&lt;p&gt;创建 &lt;code&gt;access-control.properties&lt;/code&gt; 文件，指定权限控制文件：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;access-control.name=file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 指定控制文件位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;security.config-file=/opt/trino-server-374/etc/rules.json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 自动刷新间隔，不再需要重启 Trino 即可自动生效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;security.refresh-period=1s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建 &lt;code&gt;group-provider.properties&lt;/code&gt; 文件，指定群组配置文件：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;group-provider.name=file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file.group-file=/opt/trino-server-374/etc/group.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后编辑群组映射关系 &lt;code&gt;group.txt&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;admin:admin-user&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后创建 &lt;code&gt;rules.json&lt;/code&gt; 文件编写规则，具体的权限控制比较复杂，可以参考 &lt;a href=&#34;https://trino.io/docs/current/security/file-system-access-control.html&#34;&gt;File-based access control&lt;/a&gt;，这里我们只写一个基础的权限控制规则，实现 &lt;code&gt;admin&lt;/code&gt; 组的用户可以进行所有操作，任意用户可以访问 &lt;code&gt;mysql&lt;/code&gt;，user 可以读取 &lt;code&gt;postgresql&lt;/code&gt; 的数据，&lt;code&gt;system&lt;/code&gt; 没有用户可以访问。权限匹配是从上到下的，如果没有匹配到，则默认拒绝权限。具体配置如下：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;catalogs&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;allow&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;mysql&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;allow&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;postgresql&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;allow&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;read-only&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;allow&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再创建用户 user2 及 admin-user，来测试一下效果：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是开启权限控制之前 user 可以看到的&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-4.png&#34; class=&#34;&#34; title=&#34;开启权限控制之前 user 可见范围&#34;&gt;
&lt;p&gt;&lt;strong&gt;这是开启权限控制之后 user 可以看到的&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-5.png&#34; class=&#34;&#34; title=&#34;开启权限控制之后 user 可见范围&#34;&gt;
&lt;p&gt;&lt;strong&gt;这是 user2 可以看到的&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-6.png&#34; class=&#34;&#34; title=&#34;user2 可见范围&#34;&gt;
&lt;p&gt;&lt;strong&gt;最后这是 admin-user 可以看到的&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;/2022/03/15/trino-deploy-tutorials/trino-deploy-tutorials-7.png&#34; class=&#34;&#34; title=&#34;admin-user 可见范围&#34;&gt;
 ]]></description>
        </item>
    </channel>
</rss>
